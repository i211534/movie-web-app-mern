generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  id        Int      @id @default(autoincrement())
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  token     String
  createdAt DateTime @default(now())
}

model User {
  id                Int          @id @default(autoincrement())
  email             String       @unique
  password          String
  name              String?
  address           String?
  image             String?
  dob               DateTime?
  categories        Category[]
  ratings           Rating[]
  sessions          Session[]
  sentMessages      Message[]    @relation("SentMessages")
  receivedMessages  Message[]    @relation("ReceivedMessages")
  chatGroups        ChatGroup[]  @relation("GroupMembers")
  groupMessages     GroupMessage[] @relation("UserGroupMessages")
}

model Category {
  id     Int     @id @default(autoincrement())
  name   String  @unique
  movies Movie[]
  User   User?   @relation(fields: [userId], references: [id])
  userId Int?
}

model Movie {
  id          Int      @id @default(autoincrement())
  title       String
  categoryId  Int
  description String?
  image       String?
  category    Category @relation(fields: [categoryId], references: [id])
  ratings     Rating[]
}

model Rating {
  id      Int   @id @default(autoincrement())
  value   Int
  userId  Int
  movieId Int
  user    User  @relation(fields: [userId], references: [id])
  movie   Movie @relation(fields: [movieId], references: [id])
}

model Message {
  id        Int      @id @default(autoincrement())
  senderId  Int
  receiverId Int
  content   String
  timestamp DateTime @default(now())
  sender    User     @relation("SentMessages", fields: [senderId], references: [id])
  receiver  User     @relation("ReceivedMessages", fields: [receiverId], references: [id])
}

model ChatGroup {
  id          Int          @id @default(autoincrement())
  name        String
  description String?
  members     User[]       @relation("GroupMembers")
  messages    GroupMessage[]
}

model GroupMessage {
  id        Int        @id @default(autoincrement())
  content   String
  timestamp DateTime   @default(now())
  sender    User       @relation(fields: [senderId], references: [id], name: "UserGroupMessages")
  senderId  Int
  group     ChatGroup  @relation(fields: [groupId], references: [id])
  groupId   Int
}
